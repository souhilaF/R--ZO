
rm(list=ls())
#setwd("C:/Users/SOUCHE/Desktop/Codes/V2")
#setwd("/Bureau/dossier_final")
setwd("/media/mmip/DELL_SAVE/stage_M2/Codes/V2/res_simu")

############################################################################################

#############################################################################################

#source sur pc fixe
source('~/Bureau/Codes/V2/Simul_data_last.R')
source('~/media/mmip/DELL_SAVE/stage_M2/Codes/V2/Main_function_last.R')

#------------------------------creation dataframe


val_n = c(20, 50); 
val_p <- c(500,100,50,20)
K  = 3
#-----------------------------------------  
#AUC <- list()

#file_name_auc = paste('ressim_AUC/AUC_Saturnin.Rdata')
#file_name_auc = paste('ressim_AUC/AUC_Normale.Rdata')
file_name_auc = paste('ressim_AUC/AUC_GLASSO.Rdata')

ResTab = matrix(0, length(val_n)*length(val_p)*100, 5)
colnames(ResTab) = c('n', 'p', 'sim', 'ARI', 'AUC')
simu = 0
for (n in val_n){
  N <- n*(n-1)/2 
  
  
  for (p in val_p) {
    for (sim in 1:100) {
      
      
      file_name_result = paste('ressim/ressim_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      file_name_data = paste('datasim/datasim_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      
      #file_name_result = paste('ressimSaturnin_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      #file_name_data = paste('datasim/datasim_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      
      
      #file_name_result = paste('ressim_Scores_Normale/ressim_Scores_Normale_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      #file_name_data = paste('datasim/datasim_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      
      
      if(file.exists(file_name_result)){
        simu = simu + 1
        load(file_name_data)
        load(file_name_result)
         #output <- output_logit
        ResTab[simu, 1] = n; ResTab[simu, 2] = p; ResTab[simu, 3] = sim
        Z.hat = apply(output$tau, 1, which.max); ResTab[simu, 4] = adjustedRandIndex(datasim$Z, Z.hat)
        G.hat = output$Psi1;  pred = prediction(G.hat,mat_vect_low(datasim$G))
        perf = performance(pred, "auc"); ResTab[simu, 5] = perf@y.values[[1]]
        
        
        # if(!file.exists(file_name_auc)){
        #   load(file_name_data)
        #   load(file_name_result)
        #   
        #   AUC$n <- c(AUC$n,n); AUC$p <- c(AUC$p,p); AUC$sim <- c(AUC$sim,sim); 
        #   AUC$Psi <- c(AUC$Psi, output_logit$Psi1); AUC$G <- c(AUC$G, mat_vect_low(datasim$G)); 
        #   AUC$tau <- c(AUC$tau, max.col(output_logit$tau)); AUC$Z <- c(AUC$Z,datasim$Z)
        # }
      }
    }
    
  }
}
ResTab = ResTab[1:simu, ]
dim(ResTab)

par(mfrow=c(2, 2))
boxplot(ARI~p, data=ResTab[which(ResTab[, 1]==20), ], main='ARI n = 20')
boxplot(ARI~p, data=ResTab[which(ResTab[, 1]==50), ], main='ARI n = 50')
boxplot(AUC~p, data=ResTab[which(ResTab[, 1]==20), ], main='AUC n = 20')
boxplot(AUC~p, data=ResTab[which(ResTab[, 1]==50), ], main='AUC n = 50')

save(ResTab,file=file_name_auc)



