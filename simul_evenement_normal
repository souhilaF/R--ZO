
######################################################################################################
#tirer des scores selon une normale N(O,1) si G=0 et une N(5,1) si G=1
######################################################################################################

rm(list=ls())
setwd("C:/Users/SOUCHE/Desktop/Codes/V2")


############################################################################################

#############################################################################################
source('recup_scores.R')
source('Main_function_last.R')
source('VEM_last.R')
source('Simul_data_last.R')

#############################################################################################
GammaArrete <- c(0.70, 0.30, 0.05, 0.1, 0.1, 0.5) * 1.2 # *1.2 permet d'avoir plus d'intéraction car petite quantité
PiMelange <- c(1/6, 1/3, 1/2)
paramsim <- list(GammaArrete = GammaArrete, PiMelange  = PiMelange)
n  <- 20; N <- n*(n-1)/2
val_p <- c(500,100,50,20)


#------------------------------a utiliser pour avoir une simulationde de data 
# for (p in val_p){
#   for (sim in 1:100){
# 
#     datasim <- SIMULDATA(GammaArrete, PiMelange, n,p)
#     file_name = paste('res_simu/datasim/datasim__n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
#     save(datasim,paramsim,file = file_name)
# 
#     }
# }

#------------------------------- Score si G=0~N(0,1) si G=1~N(5,1) + VEM

n  = 20; N = n*(n-1)/2
val_p <- c(500,100,50,20)
K  = 3
for (p in val_p) {
  for (sim in 1:100) { 
    
    print(paste("p=", p,", sim = ",sim))
    file_name_result = paste('res_simu/ressim_Scores_Normale/ressim_Scores_Normale_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
    
    if(!file.exists(file_name_result)){
      file_name_data = paste('res_simu/datasim/datasim_n',n,'_p',p,'_sim',sim,'.Rdata',sep='')
      load(file_name_data)
      score <- mat_vect_low(datasim$G) * rnorm(N,5,1) + (1-mat_vect_low(datasim$G)) * rnorm(N,0,1)
      output <- VEM(S = score,K, niter=1000, epsilon_tau=1e-4, epsilon_eta = 1e-4,verbose = FALSE)
      save(score,output,file=file_name_result)
      datasim = c(); paramsim = c(); output = c(); score = c()
      
      
    }
    
  }
  
}







